{"version":3,"sources":["./src/app/pages/signup/signup.page.html","./src/app/pages/signup/signup.module.ts","./src/app/pages/signup/signup.page.scss","./src/app/pages/signup/signup.page.ts"],"names":[],"mappings":"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","file":"pages-signup-signup-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"mango\\\">\\n    <ion-title>Registration</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding='true'>\\n  <div class=\\\"center\\\">\\n    <img src=\\\"assets/images/logo.png\\\" class=\\\"smallLogo\\\"/>\\n    <h1>Create Account</h1>\\n  </div>\\n  <form>\\n    <ion-list>\\n        <ion-item>\\n            <ion-label position=\\\"stacked\\\">Name</ion-label>\\n            <ion-input autocomplete=\\\"off\\\" name=\\\"name\\\" type=\\\"text\\\" [(ngModel)]=\\\"postData.name\\\"></ion-input>\\n          </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Email</ion-label>\\n        <ion-input autocomplete=\\\"off\\\" name=\\\"email\\\" type=\\\"email\\\" [(ngModel)]=\\\"postData.email\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Username</ion-label>\\n        <ion-input autocomplete=\\\"off\\\" name=\\\"username\\\" type=\\\"text\\\" [(ngModel)]=\\\"postData.username\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item>\\n        <ion-label position=\\\"stacked\\\">Password</ion-label>\\n        <ion-input autocomplete=\\\"off\\\" name=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"postData.password\\\"></ion-input>\\n      </ion-item>\\n\\n      <ion-item lines='none'>\\n        Already have an account? <a routerLink='/login'>Sign in.</a>\\n      </ion-item>\\n    </ion-list>\\n    <ion-button expand=\\\"block\\\" share=\\\"round\\\" color=\\\"success\\\" (click)=\\\"signupAction()\\\">Registration</ion-button>\\n  </form>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignupPage } from './signup.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignupPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [SignupPage]\n})\nexport class SignupPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthConstants } from './../../config/auth-constants';\nimport { AuthService } from './../../services/auth.service';\nimport { StorageService } from './../../services/storage.service';\nimport { ToastService } from './../../services/toast.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.page.html',\n  styleUrls: ['./signup.page.scss']\n})\nexport class SignupPage implements OnInit {\n  postData = {\n    name: '',\n    username: '',\n    email: '',\n    password: ''\n  };\n\n  constructor(\n    private authService: AuthService,\n    private toastService: ToastService,\n    private storageService: StorageService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {}\n\n  validateInputs() {\n    let username = this.postData.username.trim();\n    let password = this.postData.password.trim();\n    let email = this.postData.email.trim();\n    let name = this.postData.name.trim();\n    return (\n      this.postData.name &&\n      this.postData.username &&\n      this.postData.password &&\n      this.postData.email &&\n      email.length > 0 &&\n      username.length > 0 &&\n      email.length > 0 &&\n      password.length > 0\n    );\n  }\n\n  signupAction() {\n    if (this.validateInputs()) {\n      this.authService.signup(this.postData).subscribe(\n        (res: any) => {\n          if (res.userData) {\n            // Storing the User data.\n            this.storageService\n              .store(AuthConstants.AUTH, res.userData)\n              .then(res => {\n                this.router.navigate(['home']);\n              });\n          } else {\n            this.toastService.presentToast(\n              'Data alreay exists, please enter new details.'\n            );\n          }\n        },\n        (error: any) => {\n          this.toastService.presentToast('Network Issue.');\n        }\n      );\n    } else {\n      this.toastService.presentToast(\n        'Please enter name, email, username or password.'\n      );\n    }\n  }\n}\n"],"sourceRoot":""}